CREATE SCHEMA IF NOT EXISTS open_transfer
    AUTHORIZATION postgres;

COMMENT ON SCHEMA open_transfer
    IS 'Open transfer database';
BEGIN;
\c open_transfer;


-- Address Table
CREATE TABLE IF NOT EXISTS open_transfer.address (
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1),
    line1 VARCHAR(255) NOT NULL,
    line2 VARCHAR(255) NULL,
    postal_code VARCHAR(10) NOT NULL,
    city VARCHAR(50) NOT NULL,
    state_or_region VARCHAR(50) NOT NULL,
    country VARCHAR(50) NOT NULL,
    CONSTRAINT address_pkey PRIMARY KEY (id)
);

-- Company Table
CREATE TABLE IF NOT EXISTS open_transfer.company (
    cvr VARCHAR(8) NOT NULL,
    address_id INT NOT NULL UNIQUE,  -- Ensures one-to-one relationship
    name VARCHAR(255) NOT NULL,
    CONSTRAINT company_pkey PRIMARY KEY (cvr),
    CONSTRAINT fk_address_id FOREIGN KEY (address_id) REFERENCES open_transfer.address(id) ON DELETE CASCADE
);

-- Policyholder Table
CREATE TABLE IF NOT EXISTS open_transfer.policyholder (
    cpr VARCHAR(10) NOT NULL,
    address_id INT NOT NULL UNIQUE,  -- Ensures one-to-one relationship
    company_id VARCHAR(8),
    firstname VARCHAR(35) NULL,
    middlename VARCHAR(35),
    lastname VARCHAR(35) NULL,
    CONSTRAINT policyholder_pkey PRIMARY KEY (cpr),
    CONSTRAINT fk_address_id FOREIGN KEY (address_id) REFERENCES open_transfer.address(id) ON DELETE CASCADE,
    CONSTRAINT fk_company_id FOREIGN KEY (company_id) REFERENCES open_transfer.company(cvr)
);

-- Taxation Scheme Table
CREATE TABLE IF NOT EXISTS open_transfer.taxation_scheme (
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    scheme_type VARCHAR(50) NOT NULL,
    taxation_code VARCHAR(10) UNIQUE NULL,
    friendly_name TEXT NOT NULL,
    CONSTRAINT taxation_scheme_pkey PRIMARY KEY (id)
);

-- Pension Scheme Table
CREATE TABLE IF NOT EXISTS open_transfer.pension_scheme (
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    taxation_scheme_id int NOT NULL,
    pension_type VARCHAR(50) NOT NULL,
    establishment_date DATE NOT NULL,
    CONSTRAINT pension_scheme_pkey PRIMARY KEY (id),
    CONSTRAINT fk_taxation_scheme_id FOREIGN KEY (taxation_scheme_id) REFERENCES open_transfer.taxation_scheme(id)
);

-- Fund Transfer Table (formerly Transfer)
CREATE TABLE IF NOT EXISTS open_transfer.fund_transfer (
    id UUID PRIMARY KEY NOT NULL,
    cpr VARCHAR(10),
    transferring_cvr VARCHAR(8) NOT NULL,
    receiving_cvr VARCHAR(8) NOT NULL,
    scheme_id INT NOT NULL,
    amount DECIMAL(18, 2),
    transfer_date TIMESTAMP,
    transfer_type VARCHAR(50),
    fees_deducted DECIMAL(18, 2),
    CONSTRAINT fk_cpr FOREIGN KEY (cpr) REFERENCES open_transfer.policyholder(cpr),
    CONSTRAINT fk_scheme_id FOREIGN KEY (scheme_id) REFERENCES open_transfer.pension_scheme(id),
    CONSTRAINT fk_transferring_cvr FOREIGN KEY (transferring_cvr) REFERENCES open_transfer.company(cvr),
    CONSTRAINT fk_receiving_cvr FOREIGN KEY (receiving_cvr) REFERENCES open_transfer.company(cvr),
    CONSTRAINT chk_cvr_difference CHECK (transferring_cvr <> receiving_cvr) -- Ensures different CVRs
);

-- Employer Agreement Table
CREATE TABLE IF NOT EXISTS open_transfer.employer_agreement (
    id int NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    cpr VARCHAR(10),
    cvr VARCHAR(8) NOT NULL,
    consent_status VARCHAR(50) CHECK (consent_status IN ('pending', 'granted', 'revoked')) NOT NULL,
    CONSTRAINT employer_agreement_pkey PRIMARY KEY (id),
    CONSTRAINT fk_employer_cvr FOREIGN KEY (cvr) REFERENCES open_transfer.company(cvr),
    CONSTRAINT fk_employee_cpr FOREIGN KEY (cpr) REFERENCES open_transfer.policyholder(cpr)
);

-- Indexes and Unique Constraints
CREATE INDEX idx_policyholder_cpr ON open_transfer.policyholder(cpr);
CREATE INDEX idx_company_cvr ON open_transfer.company(cvr);
CREATE INDEX idx_pension_scheme_id ON open_transfer.pension_scheme(id);
CREATE INDEX idx_fund_transfer_transferring_cvr ON open_transfer.fund_transfer(transferring_cvr);
CREATE INDEX idx_fund_transfer_receiving_cvr ON open_transfer.fund_transfer(receiving_cvr);
CREATE INDEX idx_fund_transfer_scheme_id ON open_transfer.fund_transfer(scheme_id);

/* ------------- DEFAULT DATA ------------- */
-- Insert base taxation schemes with taxation codes
INSERT INTO open_transfer.taxation_scheme (scheme_type, taxation_code, friendly_name)
VALUES 
    ('taxable', '5', 'Kapitalpension (Taxable)'),
    ('tax-exempt', '7', 'Ratepension (Tax-Exempt)'),
    ('tax-exempt', '8', 'Aldersopsparing'),
    ('tax-exempt', '9', 'Arbejdsgiverordning'),
    ('taxable', '10', 'Selvpensioneringsordning (Self-Pension Savings)'),
    ('taxable', '20', 'Ophørspension (Termination Pension)'),
    ('taxable', '25', 'Udenlandsk Pension (Foreign Pension Taxable Upon Transfer)');

-- Insert data into address
INSERT INTO open_transfer.address (line1, line2, postal_code, city, state_or_region, country) 
VALUES
    ('Nørrebrogade 45', '2. sal, lejlighed 3', '2200', 'København N', 'Hovedstaden', 'Denmark'),
    ('Åboulevarden 32', '1. tv', '8000', 'Aarhus', 'Midtjylland', 'Denmark'),
    ('H.C. Andersens Boulevard 12', 'Stuen th', '1553', 'København V', 'Hovedstaden', 'Denmark'),

    ('Nansensgade 23', '3 tv', '1556', 'København K', 'Hovedstaden', 'Denmark'),
    ('Frederiksborg gade 25', '3 th', '1557', 'København K', 'Hovedstaden', 'Denmark'),
    ('Østbanegade 135', '', '2100', 'København Ø', 'Hovedstaden', 'Denmark'),
    ('Vesterbrogade 45', '2. sal', '1620', 'København V', 'Hovedstaden', 'Denmark'),
    ('Nørrebrogade 45', '2. sal', '2200', 'København N', 'Hovedstaden', 'Denmark'),
    ('Åboulevarden 32', '1. tv', '8000', 'Aarhus', 'Midtjylland', 'Denmark'),
    ('H.C. Andersens Boulevard 15', 'Stuen th', '1553', 'København V', 'Hovedstaden', 'Denmark'),
    ('Nørrebrogade 15', NULL, '2200', 'København N', 'Hovedstaden', 'Denmark'),
    ('Åboulevarden 32', '1. tv', '8000', 'Aarhus', 'Midtjylland', 'Denmark');

-- Insert data into company
INSERT INTO open_transfer.company (cvr, address_id, name) 
VALUES
    ('12567890', 4, 'Nordic Tech Solutions A/S'),
    ('87654321', 5, 'Bæredygtig Energi ApS'),
    ('98765432', 6, 'AP Pension'),
    ('12345678', 7, 'PensionDanmark'),
    ('23456789', 8, 'Nordea Liv & Pension'),
    ('34567890', 9, 'Topdanmark Livsforsikring A/S'),
    ('45678901', 10, 'PFA Pension'),
    ('56789012', 11, 'Velliv'),
    ('67890123', 12, 'Danica Pension');

-- Insert data into policyholder
INSERT INTO open_transfer.policyholder (cpr, address_id, company_id, firstname, middlename, lastname)
VALUES 
    ('1234567890', 1, '12567890', 'Anders', 'M.', 'Jensen'),
    ('2345678901', 2, '87654321', 'Lars', NULL, 'Hansen'),
    ('2309988765', 3, '98765432', 'Frederik', 'K.', 'Jensen');

-- Insert data into pension_scheme
INSERT INTO open_transfer.pension_scheme (taxation_scheme_id, pension_type, establishment_date)
VALUES 
    (1, 'Kapitalpension', '2005-06-15'),
    (2, 'Ratepension', '2010-03-20'),
    (3, 'Aldersopsparing', '2018-07-01');

-- Insert data into employer_agreement
INSERT INTO open_transfer.employer_agreement (cpr, cvr, consent_status)
VALUES 
    ('1234567890', '12345678', 'granted'),
    ('2345678901', '23456789', 'pending'),
    ('2309988765', '34567890', 'revoked');

-- Insert data into fund_transfer
INSERT INTO open_transfer.fund_transfer (id, cpr, transferring_cvr, receiving_cvr, scheme_id, amount, transfer_date, transfer_type, fees_deducted)
VALUES 
    ('550e8400-e29b-41d4-a716-446655440000', '1234567890', '12345678', '45678901', 1, 150000.00, '2025-02-01 10:30:00', 'pension transfer', 500.00),
    ('550e8400-e29b-41d4-a716-446655440001', '2345678901', '23456789', '56789012', 2, 75000.00, '2025-02-15 14:00:00', 'pension transfer', 300.00),
    ('550e8400-e29b-41d4-a716-446655440002', '2309988765', '34567890', '67890123', 3, 120000.00, '2025-02-28 09:45:00', 'pension transfer', 400.00);
